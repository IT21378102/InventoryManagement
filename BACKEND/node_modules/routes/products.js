const router = require("express").Router();

const { response } = require("express");
let Product = require("../models/Product");

//add the new Product to databse
router.route("/productadd").post((req, res) => {
  const productName = req.body.productName;
  const productDescription = req.body.productDescription;
  const productQuentity = Number(req.body.productQuentity);
  const productDatePicker = Date(req.body.productDatePicker);
  const productPrice = Number(req.body.productPrice);
  const productCode = Number(req.body.productCode);
  const productCategory = req.body.productCategory;
  const productStokeNumber = req.body.productStokeNumber;
  const proctImageUrl = req.body.proctImageUrl;

  const newProduct = new Product({
    productName,
    productDescription,
    productQuentity,
    productDatePicker,
    productPrice,
    productCode,
    productCategory,
    productStokeNumber,
    proctImageUrl,
  });

  newProduct
    .save()
    .then(() => {
      res.json("Product added successfully");
    })
    .catch((err) => {
      console.log(err);
    });
});

//read Student details

router.route("/getProduct/").get((req, res) => {
  Product.find()
    .then((inventorys) => {
      res.json(inventorys);
    })
    .catch((err) => {
      console.log(err);
    });
});

//update product data
router.route("/productupdate/:id").put(async (req, res) => {
  let productId = req.params.id;
  const {
    productName,
    productDescription,
    productQuentity,
    productDatePicker,
    productPrice,
    productCode,
    productCategory,
    productStokeNumber,
    proctImageUrl,
  } = req.body;

  const updateProduct = {
    productName,
    productDescription,
    productQuentity,
    productDatePicker,
    productPrice,
    productCode,
    productCategory,
    productStokeNumber,
    proctImageUrl,
  };
  const update = await Product.findByIdAndUpdate(productId, updateProduct)
    .then(() => {
      res.status(200).send({ status: "Product updated" });
    })
    .catch((err) => {
      console.log(err);
      res
        .status(500)
        .send({ status: "error updating status data ", error: err.message });
    });
});

//delete the proct  data  from the  database

router.route("/productdelete/:id").delete(async (req, res) => {
  let productId = req.params.id;

  await Product.findByIdAndDelete(productId)
    .then(() => {
      res.status(200).send({ status: "Product deleted" });
    })
    .catch((err) => {
      console
        .status(500)
        .send({ status: "Error deleting user", error: err.message });
    });
});

//single user data read

router.route("/productget/:id").get(async (req, res) => {
  let productId = req.params.id;
  await Product.findById(productId)
    .then((product) => {
      res.status(200).send({ status: "user fetchd", product });
    })
    .catch(() => {
      console.log(err.message);
      res
        .status(500)
        .send({ status: "error fetching  get user", error: err.message });
    });
});
module.exports = router;
